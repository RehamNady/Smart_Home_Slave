
spi_uart_slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007be  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000040  00800060  000007be  00000832  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000872  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000150  00000000  00000000  000008e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001c3d  00000000  00000000  00000a30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000bf3  00000000  00000000  0000266d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c5d  00000000  00000000  00003260  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000020c  00000000  00000000  00003ec0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000892  00000000  00000000  000040cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000cb1  00000000  00000000  0000495e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  0000560f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee eb       	ldi	r30, 0xBE	; 190
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 3a       	cpi	r26, 0xA0	; 160
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 53 02 	call	0x4a6	; 0x4a6 <main>
  7a:	0c 94 dd 03 	jmp	0x7ba	; 0x7ba <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <ADC_Init>:
  82:	80 ec       	ldi	r24, 0xC0	; 192
  84:	87 b9       	out	0x07, r24	; 7
  86:	87 e8       	ldi	r24, 0x87	; 135
  88:	86 b9       	out	0x06, r24	; 6
  8a:	08 95       	ret

0000008c <ADC_Read>:
  8c:	27 b1       	in	r18, 0x07	; 7
  8e:	97 b1       	in	r25, 0x07	; 7
  90:	20 7e       	andi	r18, 0xE0	; 224
  92:	8f 71       	andi	r24, 0x1F	; 31
  94:	82 2b       	or	r24, r18
  96:	98 2b       	or	r25, r24
  98:	97 b9       	out	0x07, r25	; 7
  9a:	86 b1       	in	r24, 0x06	; 6
  9c:	80 64       	ori	r24, 0x40	; 64
  9e:	86 b9       	out	0x06, r24	; 6
  a0:	34 9b       	sbis	0x06, 4	; 6
  a2:	fe cf       	rjmp	.-4      	; 0xa0 <ADC_Read+0x14>
  a4:	86 b1       	in	r24, 0x06	; 6
  a6:	80 61       	ori	r24, 0x10	; 16
  a8:	86 b9       	out	0x06, r24	; 6
  aa:	24 b1       	in	r18, 0x04	; 4
  ac:	85 b1       	in	r24, 0x05	; 5
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	98 2f       	mov	r25, r24
  b2:	88 27       	eor	r24, r24
  b4:	82 2b       	or	r24, r18
  b6:	08 95       	ret

000000b8 <DCmotor_Init>:
  b8:	9c e7       	ldi	r25, 0x7C	; 124
  ba:	95 bd       	out	0x25, r25	; 37
  bc:	83 bd       	out	0x23, r24	; 35
  be:	80 e8       	ldi	r24, 0x80	; 128
  c0:	88 bf       	out	0x38, r24	; 56
  c2:	08 95       	ret

000000c4 <DIO_WriteChannel>:
  c4:	98 2f       	mov	r25, r24
  c6:	96 95       	lsr	r25
  c8:	96 95       	lsr	r25
  ca:	96 95       	lsr	r25
  cc:	87 70       	andi	r24, 0x07	; 7
  ce:	91 30       	cpi	r25, 0x01	; 1
  d0:	21 f1       	breq	.+72     	; 0x11a <DIO_WriteChannel+0x56>
  d2:	30 f0       	brcs	.+12     	; 0xe0 <DIO_WriteChannel+0x1c>
  d4:	92 30       	cpi	r25, 0x02	; 2
  d6:	f1 f1       	breq	.+124    	; 0x154 <DIO_WriteChannel+0x90>
  d8:	93 30       	cpi	r25, 0x03	; 3
  da:	09 f4       	brne	.+2      	; 0xde <DIO_WriteChannel+0x1a>
  dc:	58 c0       	rjmp	.+176    	; 0x18e <DIO_WriteChannel+0xca>
  de:	08 95       	ret
  e0:	61 30       	cpi	r22, 0x01	; 1
  e2:	69 f4       	brne	.+26     	; 0xfe <DIO_WriteChannel+0x3a>
  e4:	4b b3       	in	r20, 0x1b	; 27
  e6:	21 e0       	ldi	r18, 0x01	; 1
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	b9 01       	movw	r22, r18
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <DIO_WriteChannel+0x2e>
  ee:	66 0f       	add	r22, r22
  f0:	77 1f       	adc	r23, r23
  f2:	8a 95       	dec	r24
  f4:	e2 f7       	brpl	.-8      	; 0xee <DIO_WriteChannel+0x2a>
  f6:	cb 01       	movw	r24, r22
  f8:	84 2b       	or	r24, r20
  fa:	8b bb       	out	0x1b, r24	; 27
  fc:	08 95       	ret
  fe:	4b b3       	in	r20, 0x1b	; 27
 100:	21 e0       	ldi	r18, 0x01	; 1
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	b9 01       	movw	r22, r18
 106:	02 c0       	rjmp	.+4      	; 0x10c <DIO_WriteChannel+0x48>
 108:	66 0f       	add	r22, r22
 10a:	77 1f       	adc	r23, r23
 10c:	8a 95       	dec	r24
 10e:	e2 f7       	brpl	.-8      	; 0x108 <DIO_WriteChannel+0x44>
 110:	cb 01       	movw	r24, r22
 112:	80 95       	com	r24
 114:	84 23       	and	r24, r20
 116:	8b bb       	out	0x1b, r24	; 27
 118:	08 95       	ret
 11a:	61 30       	cpi	r22, 0x01	; 1
 11c:	69 f4       	brne	.+26     	; 0x138 <DIO_WriteChannel+0x74>
 11e:	48 b3       	in	r20, 0x18	; 24
 120:	21 e0       	ldi	r18, 0x01	; 1
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	b9 01       	movw	r22, r18
 126:	02 c0       	rjmp	.+4      	; 0x12c <DIO_WriteChannel+0x68>
 128:	66 0f       	add	r22, r22
 12a:	77 1f       	adc	r23, r23
 12c:	8a 95       	dec	r24
 12e:	e2 f7       	brpl	.-8      	; 0x128 <DIO_WriteChannel+0x64>
 130:	cb 01       	movw	r24, r22
 132:	84 2b       	or	r24, r20
 134:	88 bb       	out	0x18, r24	; 24
 136:	08 95       	ret
 138:	48 b3       	in	r20, 0x18	; 24
 13a:	21 e0       	ldi	r18, 0x01	; 1
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	b9 01       	movw	r22, r18
 140:	02 c0       	rjmp	.+4      	; 0x146 <DIO_WriteChannel+0x82>
 142:	66 0f       	add	r22, r22
 144:	77 1f       	adc	r23, r23
 146:	8a 95       	dec	r24
 148:	e2 f7       	brpl	.-8      	; 0x142 <DIO_WriteChannel+0x7e>
 14a:	cb 01       	movw	r24, r22
 14c:	80 95       	com	r24
 14e:	84 23       	and	r24, r20
 150:	88 bb       	out	0x18, r24	; 24
 152:	08 95       	ret
 154:	61 30       	cpi	r22, 0x01	; 1
 156:	69 f4       	brne	.+26     	; 0x172 <DIO_WriteChannel+0xae>
 158:	45 b3       	in	r20, 0x15	; 21
 15a:	21 e0       	ldi	r18, 0x01	; 1
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	b9 01       	movw	r22, r18
 160:	02 c0       	rjmp	.+4      	; 0x166 <DIO_WriteChannel+0xa2>
 162:	66 0f       	add	r22, r22
 164:	77 1f       	adc	r23, r23
 166:	8a 95       	dec	r24
 168:	e2 f7       	brpl	.-8      	; 0x162 <DIO_WriteChannel+0x9e>
 16a:	cb 01       	movw	r24, r22
 16c:	84 2b       	or	r24, r20
 16e:	85 bb       	out	0x15, r24	; 21
 170:	08 95       	ret
 172:	45 b3       	in	r20, 0x15	; 21
 174:	21 e0       	ldi	r18, 0x01	; 1
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	b9 01       	movw	r22, r18
 17a:	02 c0       	rjmp	.+4      	; 0x180 <DIO_WriteChannel+0xbc>
 17c:	66 0f       	add	r22, r22
 17e:	77 1f       	adc	r23, r23
 180:	8a 95       	dec	r24
 182:	e2 f7       	brpl	.-8      	; 0x17c <DIO_WriteChannel+0xb8>
 184:	cb 01       	movw	r24, r22
 186:	80 95       	com	r24
 188:	84 23       	and	r24, r20
 18a:	85 bb       	out	0x15, r24	; 21
 18c:	08 95       	ret
 18e:	61 30       	cpi	r22, 0x01	; 1
 190:	69 f4       	brne	.+26     	; 0x1ac <DIO_WriteChannel+0xe8>
 192:	42 b3       	in	r20, 0x12	; 18
 194:	21 e0       	ldi	r18, 0x01	; 1
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	b9 01       	movw	r22, r18
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_WriteChannel+0xdc>
 19c:	66 0f       	add	r22, r22
 19e:	77 1f       	adc	r23, r23
 1a0:	8a 95       	dec	r24
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_WriteChannel+0xd8>
 1a4:	cb 01       	movw	r24, r22
 1a6:	84 2b       	or	r24, r20
 1a8:	82 bb       	out	0x12, r24	; 18
 1aa:	08 95       	ret
 1ac:	42 b3       	in	r20, 0x12	; 18
 1ae:	21 e0       	ldi	r18, 0x01	; 1
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	b9 01       	movw	r22, r18
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_WriteChannel+0xf6>
 1b6:	66 0f       	add	r22, r22
 1b8:	77 1f       	adc	r23, r23
 1ba:	8a 95       	dec	r24
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_WriteChannel+0xf2>
 1be:	cb 01       	movw	r24, r22
 1c0:	80 95       	com	r24
 1c2:	84 23       	and	r24, r20
 1c4:	82 bb       	out	0x12, r24	; 18
 1c6:	08 95       	ret

000001c8 <DIO_Init>:
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	a0 c0       	rjmp	.+320    	; 0x30c <DIO_Init+0x144>
 1cc:	98 2f       	mov	r25, r24
 1ce:	96 95       	lsr	r25
 1d0:	96 95       	lsr	r25
 1d2:	96 95       	lsr	r25
 1d4:	28 2f       	mov	r18, r24
 1d6:	27 70       	andi	r18, 0x07	; 7
 1d8:	91 30       	cpi	r25, 0x01	; 1
 1da:	61 f1       	breq	.+88     	; 0x234 <DIO_Init+0x6c>
 1dc:	38 f0       	brcs	.+14     	; 0x1ec <DIO_Init+0x24>
 1de:	92 30       	cpi	r25, 0x02	; 2
 1e0:	09 f4       	brne	.+2      	; 0x1e4 <DIO_Init+0x1c>
 1e2:	4c c0       	rjmp	.+152    	; 0x27c <DIO_Init+0xb4>
 1e4:	93 30       	cpi	r25, 0x03	; 3
 1e6:	09 f4       	brne	.+2      	; 0x1ea <DIO_Init+0x22>
 1e8:	6d c0       	rjmp	.+218    	; 0x2c4 <DIO_Init+0xfc>
 1ea:	8f c0       	rjmp	.+286    	; 0x30a <DIO_Init+0x142>
 1ec:	e8 2f       	mov	r30, r24
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	ee 0f       	add	r30, r30
 1f2:	ff 1f       	adc	r31, r31
 1f4:	e0 5a       	subi	r30, 0xA0	; 160
 1f6:	ff 4f       	sbci	r31, 0xFF	; 255
 1f8:	90 81       	ld	r25, Z
 1fa:	91 30       	cpi	r25, 0x01	; 1
 1fc:	69 f4       	brne	.+26     	; 0x218 <DIO_Init+0x50>
 1fe:	9a b3       	in	r25, 0x1a	; 26
 200:	41 e0       	ldi	r20, 0x01	; 1
 202:	50 e0       	ldi	r21, 0x00	; 0
 204:	ba 01       	movw	r22, r20
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_Init+0x44>
 208:	66 0f       	add	r22, r22
 20a:	77 1f       	adc	r23, r23
 20c:	2a 95       	dec	r18
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_Init+0x40>
 210:	9b 01       	movw	r18, r22
 212:	29 2b       	or	r18, r25
 214:	2a bb       	out	0x1a, r18	; 26
 216:	79 c0       	rjmp	.+242    	; 0x30a <DIO_Init+0x142>
 218:	9a b3       	in	r25, 0x1a	; 26
 21a:	41 e0       	ldi	r20, 0x01	; 1
 21c:	50 e0       	ldi	r21, 0x00	; 0
 21e:	ba 01       	movw	r22, r20
 220:	02 c0       	rjmp	.+4      	; 0x226 <DIO_Init+0x5e>
 222:	66 0f       	add	r22, r22
 224:	77 1f       	adc	r23, r23
 226:	2a 95       	dec	r18
 228:	e2 f7       	brpl	.-8      	; 0x222 <DIO_Init+0x5a>
 22a:	9b 01       	movw	r18, r22
 22c:	20 95       	com	r18
 22e:	29 23       	and	r18, r25
 230:	2a bb       	out	0x1a, r18	; 26
 232:	6b c0       	rjmp	.+214    	; 0x30a <DIO_Init+0x142>
 234:	e8 2f       	mov	r30, r24
 236:	f0 e0       	ldi	r31, 0x00	; 0
 238:	ee 0f       	add	r30, r30
 23a:	ff 1f       	adc	r31, r31
 23c:	e0 5a       	subi	r30, 0xA0	; 160
 23e:	ff 4f       	sbci	r31, 0xFF	; 255
 240:	90 81       	ld	r25, Z
 242:	91 30       	cpi	r25, 0x01	; 1
 244:	69 f4       	brne	.+26     	; 0x260 <DIO_Init+0x98>
 246:	97 b3       	in	r25, 0x17	; 23
 248:	41 e0       	ldi	r20, 0x01	; 1
 24a:	50 e0       	ldi	r21, 0x00	; 0
 24c:	ba 01       	movw	r22, r20
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_Init+0x8c>
 250:	66 0f       	add	r22, r22
 252:	77 1f       	adc	r23, r23
 254:	2a 95       	dec	r18
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_Init+0x88>
 258:	9b 01       	movw	r18, r22
 25a:	29 2b       	or	r18, r25
 25c:	27 bb       	out	0x17, r18	; 23
 25e:	55 c0       	rjmp	.+170    	; 0x30a <DIO_Init+0x142>
 260:	97 b3       	in	r25, 0x17	; 23
 262:	41 e0       	ldi	r20, 0x01	; 1
 264:	50 e0       	ldi	r21, 0x00	; 0
 266:	ba 01       	movw	r22, r20
 268:	02 c0       	rjmp	.+4      	; 0x26e <DIO_Init+0xa6>
 26a:	66 0f       	add	r22, r22
 26c:	77 1f       	adc	r23, r23
 26e:	2a 95       	dec	r18
 270:	e2 f7       	brpl	.-8      	; 0x26a <DIO_Init+0xa2>
 272:	9b 01       	movw	r18, r22
 274:	20 95       	com	r18
 276:	29 23       	and	r18, r25
 278:	27 bb       	out	0x17, r18	; 23
 27a:	47 c0       	rjmp	.+142    	; 0x30a <DIO_Init+0x142>
 27c:	e8 2f       	mov	r30, r24
 27e:	f0 e0       	ldi	r31, 0x00	; 0
 280:	ee 0f       	add	r30, r30
 282:	ff 1f       	adc	r31, r31
 284:	e0 5a       	subi	r30, 0xA0	; 160
 286:	ff 4f       	sbci	r31, 0xFF	; 255
 288:	90 81       	ld	r25, Z
 28a:	91 30       	cpi	r25, 0x01	; 1
 28c:	69 f4       	brne	.+26     	; 0x2a8 <DIO_Init+0xe0>
 28e:	94 b3       	in	r25, 0x14	; 20
 290:	41 e0       	ldi	r20, 0x01	; 1
 292:	50 e0       	ldi	r21, 0x00	; 0
 294:	ba 01       	movw	r22, r20
 296:	02 c0       	rjmp	.+4      	; 0x29c <DIO_Init+0xd4>
 298:	66 0f       	add	r22, r22
 29a:	77 1f       	adc	r23, r23
 29c:	2a 95       	dec	r18
 29e:	e2 f7       	brpl	.-8      	; 0x298 <DIO_Init+0xd0>
 2a0:	9b 01       	movw	r18, r22
 2a2:	29 2b       	or	r18, r25
 2a4:	24 bb       	out	0x14, r18	; 20
 2a6:	31 c0       	rjmp	.+98     	; 0x30a <DIO_Init+0x142>
 2a8:	94 b3       	in	r25, 0x14	; 20
 2aa:	41 e0       	ldi	r20, 0x01	; 1
 2ac:	50 e0       	ldi	r21, 0x00	; 0
 2ae:	ba 01       	movw	r22, r20
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <DIO_Init+0xee>
 2b2:	66 0f       	add	r22, r22
 2b4:	77 1f       	adc	r23, r23
 2b6:	2a 95       	dec	r18
 2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <DIO_Init+0xea>
 2ba:	9b 01       	movw	r18, r22
 2bc:	20 95       	com	r18
 2be:	29 23       	and	r18, r25
 2c0:	24 bb       	out	0x14, r18	; 20
 2c2:	23 c0       	rjmp	.+70     	; 0x30a <DIO_Init+0x142>
 2c4:	e8 2f       	mov	r30, r24
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	ee 0f       	add	r30, r30
 2ca:	ff 1f       	adc	r31, r31
 2cc:	e0 5a       	subi	r30, 0xA0	; 160
 2ce:	ff 4f       	sbci	r31, 0xFF	; 255
 2d0:	90 81       	ld	r25, Z
 2d2:	91 30       	cpi	r25, 0x01	; 1
 2d4:	69 f4       	brne	.+26     	; 0x2f0 <DIO_Init+0x128>
 2d6:	91 b3       	in	r25, 0x11	; 17
 2d8:	41 e0       	ldi	r20, 0x01	; 1
 2da:	50 e0       	ldi	r21, 0x00	; 0
 2dc:	ba 01       	movw	r22, r20
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <DIO_Init+0x11c>
 2e0:	66 0f       	add	r22, r22
 2e2:	77 1f       	adc	r23, r23
 2e4:	2a 95       	dec	r18
 2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <DIO_Init+0x118>
 2e8:	9b 01       	movw	r18, r22
 2ea:	29 2b       	or	r18, r25
 2ec:	21 bb       	out	0x11, r18	; 17
 2ee:	0d c0       	rjmp	.+26     	; 0x30a <DIO_Init+0x142>
 2f0:	91 b3       	in	r25, 0x11	; 17
 2f2:	41 e0       	ldi	r20, 0x01	; 1
 2f4:	50 e0       	ldi	r21, 0x00	; 0
 2f6:	ba 01       	movw	r22, r20
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <DIO_Init+0x136>
 2fa:	66 0f       	add	r22, r22
 2fc:	77 1f       	adc	r23, r23
 2fe:	2a 95       	dec	r18
 300:	e2 f7       	brpl	.-8      	; 0x2fa <DIO_Init+0x132>
 302:	9b 01       	movw	r18, r22
 304:	20 95       	com	r18
 306:	29 23       	and	r18, r25
 308:	21 bb       	out	0x11, r18	; 17
 30a:	8f 5f       	subi	r24, 0xFF	; 255
 30c:	80 32       	cpi	r24, 0x20	; 32
 30e:	08 f4       	brcc	.+2      	; 0x312 <DIO_Init+0x14a>
 310:	5d cf       	rjmp	.-326    	; 0x1cc <DIO_Init+0x4>
 312:	08 95       	ret

00000314 <LCD_Cmd>:
 314:	cf 93       	push	r28
 316:	c8 2f       	mov	r28, r24
 318:	8b b3       	in	r24, 0x1b	; 27
 31a:	8f 70       	andi	r24, 0x0F	; 15
 31c:	9c 2f       	mov	r25, r28
 31e:	90 7f       	andi	r25, 0xF0	; 240
 320:	89 2b       	or	r24, r25
 322:	8b bb       	out	0x1b, r24	; 27
 324:	60 e0       	ldi	r22, 0x00	; 0
 326:	89 e0       	ldi	r24, 0x09	; 9
 328:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 32c:	60 e0       	ldi	r22, 0x00	; 0
 32e:	8b e0       	ldi	r24, 0x0B	; 11
 330:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 334:	8f e8       	ldi	r24, 0x8F	; 143
 336:	91 e0       	ldi	r25, 0x01	; 1
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <LCD_Cmd+0x24>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <LCD_Cmd+0x2a>
 33e:	00 00       	nop
 340:	61 e0       	ldi	r22, 0x01	; 1
 342:	8b e0       	ldi	r24, 0x0B	; 11
 344:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 348:	8f e1       	ldi	r24, 0x1F	; 31
 34a:	9e e4       	ldi	r25, 0x4E	; 78
 34c:	01 97       	sbiw	r24, 0x01	; 1
 34e:	f1 f7       	brne	.-4      	; 0x34c <LCD_Cmd+0x38>
 350:	00 c0       	rjmp	.+0      	; 0x352 <LCD_Cmd+0x3e>
 352:	00 00       	nop
 354:	2b b3       	in	r18, 0x1b	; 27
 356:	30 e1       	ldi	r19, 0x10	; 16
 358:	c3 9f       	mul	r28, r19
 35a:	c0 01       	movw	r24, r0
 35c:	11 24       	eor	r1, r1
 35e:	92 2f       	mov	r25, r18
 360:	9f 70       	andi	r25, 0x0F	; 15
 362:	89 2b       	or	r24, r25
 364:	8b bb       	out	0x1b, r24	; 27
 366:	60 e0       	ldi	r22, 0x00	; 0
 368:	89 e0       	ldi	r24, 0x09	; 9
 36a:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 36e:	60 e0       	ldi	r22, 0x00	; 0
 370:	8b e0       	ldi	r24, 0x0B	; 11
 372:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 376:	8f e8       	ldi	r24, 0x8F	; 143
 378:	91 e0       	ldi	r25, 0x01	; 1
 37a:	01 97       	sbiw	r24, 0x01	; 1
 37c:	f1 f7       	brne	.-4      	; 0x37a <LCD_Cmd+0x66>
 37e:	00 c0       	rjmp	.+0      	; 0x380 <LCD_Cmd+0x6c>
 380:	00 00       	nop
 382:	61 e0       	ldi	r22, 0x01	; 1
 384:	8b e0       	ldi	r24, 0x0B	; 11
 386:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 38a:	8f e3       	ldi	r24, 0x3F	; 63
 38c:	9f e1       	ldi	r25, 0x1F	; 31
 38e:	01 97       	sbiw	r24, 0x01	; 1
 390:	f1 f7       	brne	.-4      	; 0x38e <LCD_Cmd+0x7a>
 392:	00 c0       	rjmp	.+0      	; 0x394 <LCD_Cmd+0x80>
 394:	00 00       	nop
 396:	cf 91       	pop	r28
 398:	08 95       	ret

0000039a <LCD_Init>:
 39a:	2f ef       	ldi	r18, 0xFF	; 255
 39c:	89 ef       	ldi	r24, 0xF9	; 249
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	21 50       	subi	r18, 0x01	; 1
 3a2:	80 40       	sbci	r24, 0x00	; 0
 3a4:	90 40       	sbci	r25, 0x00	; 0
 3a6:	e1 f7       	brne	.-8      	; 0x3a0 <LCD_Init+0x6>
 3a8:	00 c0       	rjmp	.+0      	; 0x3aa <LCD_Init+0x10>
 3aa:	00 00       	nop
 3ac:	60 e0       	ldi	r22, 0x00	; 0
 3ae:	8a e0       	ldi	r24, 0x0A	; 10
 3b0:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 3b4:	83 e3       	ldi	r24, 0x33	; 51
 3b6:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_Cmd>
 3ba:	87 e5       	ldi	r24, 0x57	; 87
 3bc:	92 e0       	ldi	r25, 0x02	; 2
 3be:	01 97       	sbiw	r24, 0x01	; 1
 3c0:	f1 f7       	brne	.-4      	; 0x3be <LCD_Init+0x24>
 3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <LCD_Init+0x2a>
 3c4:	00 00       	nop
 3c6:	82 e3       	ldi	r24, 0x32	; 50
 3c8:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_Cmd>
 3cc:	88 e2       	ldi	r24, 0x28	; 40
 3ce:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_Cmd>
 3d2:	86 e0       	ldi	r24, 0x06	; 6
 3d4:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_Cmd>
 3d8:	8c e0       	ldi	r24, 0x0C	; 12
 3da:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_Cmd>
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_Cmd>
 3e4:	8f e3       	ldi	r24, 0x3F	; 63
 3e6:	9f e1       	ldi	r25, 0x1F	; 31
 3e8:	01 97       	sbiw	r24, 0x01	; 1
 3ea:	f1 f7       	brne	.-4      	; 0x3e8 <LCD_Init+0x4e>
 3ec:	00 c0       	rjmp	.+0      	; 0x3ee <LCD_Init+0x54>
 3ee:	00 00       	nop
 3f0:	08 95       	ret

000003f2 <LCD_SendChar>:
 3f2:	cf 93       	push	r28
 3f4:	c8 2f       	mov	r28, r24
 3f6:	8b b3       	in	r24, 0x1b	; 27
 3f8:	8f 70       	andi	r24, 0x0F	; 15
 3fa:	9c 2f       	mov	r25, r28
 3fc:	90 7f       	andi	r25, 0xF0	; 240
 3fe:	89 2b       	or	r24, r25
 400:	8b bb       	out	0x1b, r24	; 27
 402:	61 e0       	ldi	r22, 0x01	; 1
 404:	89 e0       	ldi	r24, 0x09	; 9
 406:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 40a:	60 e0       	ldi	r22, 0x00	; 0
 40c:	8b e0       	ldi	r24, 0x0B	; 11
 40e:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 412:	8f e8       	ldi	r24, 0x8F	; 143
 414:	91 e0       	ldi	r25, 0x01	; 1
 416:	01 97       	sbiw	r24, 0x01	; 1
 418:	f1 f7       	brne	.-4      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 41a:	00 c0       	rjmp	.+0      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 41c:	00 00       	nop
 41e:	61 e0       	ldi	r22, 0x01	; 1
 420:	8b e0       	ldi	r24, 0x0B	; 11
 422:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 426:	8f e1       	ldi	r24, 0x1F	; 31
 428:	9e e4       	ldi	r25, 0x4E	; 78
 42a:	01 97       	sbiw	r24, 0x01	; 1
 42c:	f1 f7       	brne	.-4      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 42e:	00 c0       	rjmp	.+0      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 430:	00 00       	nop
 432:	2b b3       	in	r18, 0x1b	; 27
 434:	30 e1       	ldi	r19, 0x10	; 16
 436:	c3 9f       	mul	r28, r19
 438:	c0 01       	movw	r24, r0
 43a:	11 24       	eor	r1, r1
 43c:	92 2f       	mov	r25, r18
 43e:	9f 70       	andi	r25, 0x0F	; 15
 440:	89 2b       	or	r24, r25
 442:	8b bb       	out	0x1b, r24	; 27
 444:	61 e0       	ldi	r22, 0x01	; 1
 446:	89 e0       	ldi	r24, 0x09	; 9
 448:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 44c:	60 e0       	ldi	r22, 0x00	; 0
 44e:	8b e0       	ldi	r24, 0x0B	; 11
 450:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 454:	8f e8       	ldi	r24, 0x8F	; 143
 456:	91 e0       	ldi	r25, 0x01	; 1
 458:	01 97       	sbiw	r24, 0x01	; 1
 45a:	f1 f7       	brne	.-4      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 45c:	00 c0       	rjmp	.+0      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 45e:	00 00       	nop
 460:	61 e0       	ldi	r22, 0x01	; 1
 462:	8b e0       	ldi	r24, 0x0B	; 11
 464:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 468:	8f e3       	ldi	r24, 0x3F	; 63
 46a:	9f e1       	ldi	r25, 0x1F	; 31
 46c:	01 97       	sbiw	r24, 0x01	; 1
 46e:	f1 f7       	brne	.-4      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 472:	00 00       	nop
 474:	cf 91       	pop	r28
 476:	08 95       	ret

00000478 <LCD_SendString>:
 478:	0f 93       	push	r16
 47a:	1f 93       	push	r17
 47c:	cf 93       	push	r28
 47e:	8c 01       	movw	r16, r24
 480:	c0 e0       	ldi	r28, 0x00	; 0
 482:	03 c0       	rjmp	.+6      	; 0x48a <LCD_SendString+0x12>
 484:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <LCD_SendChar>
 488:	cf 5f       	subi	r28, 0xFF	; 255
 48a:	f8 01       	movw	r30, r16
 48c:	ec 0f       	add	r30, r28
 48e:	f1 1d       	adc	r31, r1
 490:	80 81       	ld	r24, Z
 492:	81 11       	cpse	r24, r1
 494:	f7 cf       	rjmp	.-18     	; 0x484 <LCD_SendString+0xc>
 496:	cf 91       	pop	r28
 498:	1f 91       	pop	r17
 49a:	0f 91       	pop	r16
 49c:	08 95       	ret

0000049e <LCD_Clear>:
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_Cmd>
 4a4:	08 95       	ret

000004a6 <main>:
#include <stdlib.h>
#define F_CPU 16000000UL
#include <util/delay.h>

int main(void)
{
 4a6:	cf 93       	push	r28
 4a8:	df 93       	push	r29
 4aa:	cd b7       	in	r28, 0x3d	; 61
 4ac:	de b7       	in	r29, 0x3e	; 62
 4ae:	e4 97       	sbiw	r28, 0x34	; 52
 4b0:	0f b6       	in	r0, 0x3f	; 63
 4b2:	f8 94       	cli
 4b4:	de bf       	out	0x3e, r29	; 62
 4b6:	0f be       	out	0x3f, r0	; 63
 4b8:	cd bf       	out	0x3d, r28	; 61
    
   DIO_Init();
 4ba:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <DIO_Init>
   LCD_Init();
 4be:	0e 94 cd 01 	call	0x39a	; 0x39a <LCD_Init>
   ADC_Init();
 4c2:	0e 94 41 00 	call	0x82	; 0x82 <ADC_Init>
   Servo_Init();
 4c6:	0e 94 0f 03 	call	0x61e	; 0x61e <Servo_Init>
   DCmotor_Init(OCR2);
 4ca:	83 b5       	in	r24, 0x23	; 35
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	0e 94 5c 00 	call	0xb8	; 0xb8 <DCmotor_Init>
   
   SPI_InitType InitData ={Slave,MSB};
 4d2:	81 e0       	ldi	r24, 0x01	; 1
 4d4:	89 83       	std	Y+1, r24	; 0x01
 4d6:	8a 83       	std	Y+2, r24	; 0x02
   SPI_Init(&InitData);
 4d8:	ce 01       	movw	r24, r28
 4da:	01 96       	adiw	r24, 0x01	; 1
 4dc:	0e 94 29 03 	call	0x652	; 0x652 <SPI_Init>
   
   Uint8 data_recv=0;
   Uint8 data_DC=0;
   Uint8 data_Servo=0;
 4e0:	e1 2c       	mov	r14, r1
   
   SPI_InitType InitData ={Slave,MSB};
   SPI_Init(&InitData);
   
   Uint8 data_recv=0;
   Uint8 data_DC=0;
 4e2:	f1 2c       	mov	r15, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4e4:	2f ef       	ldi	r18, 0xFF	; 255
 4e6:	86 e1       	ldi	r24, 0x16	; 22
 4e8:	91 e1       	ldi	r25, 0x11	; 17
 4ea:	21 50       	subi	r18, 0x01	; 1
 4ec:	80 40       	sbci	r24, 0x00	; 0
 4ee:	90 40       	sbci	r25, 0x00	; 0
 4f0:	e1 f7       	brne	.-8      	; 0x4ea <main+0x44>
 4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <main+0x4e>
 4f4:	00 00       	nop
   char string [50];
   
    while (1) 
    {
		_delay_ms(350);
		LCD_Clear();
 4f6:	0e 94 4f 02 	call	0x49e	; 0x49e <LCD_Clear>
		temp=ADC_Read(DIO_ChannelA1);
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	0e 94 46 00 	call	0x8c	; 0x8c <ADC_Read>
		temp=temp/4;
 500:	8c 01       	movw	r16, r24
 502:	99 23       	and	r25, r25
 504:	14 f4       	brge	.+4      	; 0x50a <main+0x64>
 506:	0d 5f       	subi	r16, 0xFD	; 253
 508:	1f 4f       	sbci	r17, 0xFF	; 255
 50a:	15 95       	asr	r17
 50c:	07 95       	ror	r16
 50e:	15 95       	asr	r17
 510:	07 95       	ror	r16
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 512:	4a e0       	ldi	r20, 0x0A	; 10
 514:	be 01       	movw	r22, r28
 516:	6d 5f       	subi	r22, 0xFD	; 253
 518:	7f 4f       	sbci	r23, 0xFF	; 255
 51a:	80 2f       	mov	r24, r16
 51c:	91 2f       	mov	r25, r17
 51e:	0e 94 a8 03 	call	0x750	; 0x750 <__itoa_ncheck>
		itoa(temp,string,10);
		LCD_SendString(string);
 522:	ce 01       	movw	r24, r28
 524:	03 96       	adiw	r24, 0x03	; 3
 526:	0e 94 3c 02 	call	0x478	; 0x478 <LCD_SendString>
		data_recv=SPI_TXRX(temp);
 52a:	80 2f       	mov	r24, r16
 52c:	0e 94 48 03 	call	0x690	; 0x690 <SPI_TXRX>
 530:	18 2f       	mov	r17, r24
		if (data_recv=='W'){
 532:	87 35       	cpi	r24, 0x57	; 87
 534:	89 f4       	brne	.+34     	; 0x558 <main+0xb2>
			OCR2=10;
 536:	8a e0       	ldi	r24, 0x0A	; 10
 538:	83 bd       	out	0x23, r24	; 35
			DIO_WriteChannel(DIO_ChannelC4,STD_High);
 53a:	61 e0       	ldi	r22, 0x01	; 1
 53c:	84 e1       	ldi	r24, 0x14	; 20
 53e:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
			DIO_WriteChannel(DIO_ChannelC3,STD_Low);
 542:	60 e0       	ldi	r22, 0x00	; 0
 544:	83 e1       	ldi	r24, 0x13	; 19
 546:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
			servo_angle(180);
 54a:	64 eb       	ldi	r22, 0xB4	; 180
 54c:	70 e0       	ldi	r23, 0x00	; 0
 54e:	80 e0       	ldi	r24, 0x00	; 0
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	0e 94 18 03 	call	0x630	; 0x630 <servo_angle>
 556:	17 c0       	rjmp	.+46     	; 0x586 <main+0xe0>
			
		}
		
		else{
			if(data_DC!='2') {
 558:	22 e3       	ldi	r18, 0x32	; 50
 55a:	f2 16       	cp	r15, r18
 55c:	51 f0       	breq	.+20     	; 0x572 <main+0xcc>
				 OCR2=0XFF;
 55e:	8f ef       	ldi	r24, 0xFF	; 255
 560:	83 bd       	out	0x23, r24	; 35
				 DIO_WriteChannel(DIO_ChannelC3,STD_Low);
 562:	60 e0       	ldi	r22, 0x00	; 0
 564:	83 e1       	ldi	r24, 0x13	; 19
 566:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
				 DIO_WriteChannel(DIO_ChannelC4,STD_Low);
 56a:	60 e0       	ldi	r22, 0x00	; 0
 56c:	84 e1       	ldi	r24, 0x14	; 20
 56e:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
				 }
			if(data_Servo !='4'){
 572:	84 e3       	ldi	r24, 0x34	; 52
 574:	e8 16       	cp	r14, r24
 576:	39 f0       	breq	.+14     	; 0x586 <main+0xe0>
			servo_angle(0);
 578:	60 e0       	ldi	r22, 0x00	; 0
 57a:	70 e0       	ldi	r23, 0x00	; 0
 57c:	cb 01       	movw	r24, r22
 57e:	0e 94 18 03 	call	0x630	; 0x630 <servo_angle>
			OCR1A=0;}
 582:	1b bc       	out	0x2b, r1	; 43
 584:	1a bc       	out	0x2a, r1	; 42
			
			
		}
		if((data_recv=='2')||(data_recv=='3')){
 586:	8e ec       	ldi	r24, 0xCE	; 206
 588:	81 0f       	add	r24, r17
 58a:	82 30       	cpi	r24, 0x02	; 2
 58c:	08 f4       	brcc	.+2      	; 0x590 <main+0xea>
			data_DC=data_recv;
 58e:	f1 2e       	mov	r15, r17
		}
		if((data_recv=='4')||(data_recv=='5')){
 590:	8c ec       	ldi	r24, 0xCC	; 204
 592:	81 0f       	add	r24, r17
 594:	82 30       	cpi	r24, 0x02	; 2
 596:	08 f4       	brcc	.+2      	; 0x59a <main+0xf4>
			data_Servo=data_recv;
 598:	e1 2e       	mov	r14, r17
		}
		
		if (data_recv=='1'){
 59a:	11 33       	cpi	r17, 0x31	; 49
 59c:	29 f4       	brne	.+10     	; 0x5a8 <main+0x102>
			
			DIO_WriteChannel(DIO_ChannelC0,STD_High);
 59e:	61 e0       	ldi	r22, 0x01	; 1
 5a0:	80 e1       	ldi	r24, 0x10	; 16
 5a2:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 5a6:	06 c0       	rjmp	.+12     	; 0x5b4 <main+0x10e>
			
		}
		else if (data_recv=='0'){
 5a8:	10 33       	cpi	r17, 0x30	; 48
 5aa:	21 f4       	brne	.+8      	; 0x5b4 <main+0x10e>
			
			DIO_WriteChannel(DIO_ChannelC0,STD_Low);
 5ac:	60 e0       	ldi	r22, 0x00	; 0
 5ae:	80 e1       	ldi	r24, 0x10	; 16
 5b0:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
			
		}
		 if (data_DC=='2'){
 5b4:	92 e3       	ldi	r25, 0x32	; 50
 5b6:	f9 12       	cpse	r15, r25
 5b8:	0b c0       	rjmp	.+22     	; 0x5d0 <main+0x12a>
			OCR2=10;
 5ba:	8a e0       	ldi	r24, 0x0A	; 10
 5bc:	83 bd       	out	0x23, r24	; 35
			DIO_WriteChannel(DIO_ChannelC4,STD_High);
 5be:	61 e0       	ldi	r22, 0x01	; 1
 5c0:	84 e1       	ldi	r24, 0x14	; 20
 5c2:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
			DIO_WriteChannel(DIO_ChannelC3,STD_Low);
 5c6:	60 e0       	ldi	r22, 0x00	; 0
 5c8:	83 e1       	ldi	r24, 0x13	; 19
 5ca:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
 5ce:	0f c0       	rjmp	.+30     	; 0x5ee <main+0x148>
		}
		else if((data_DC=='3')&&(data_recv!='W')){
 5d0:	23 e3       	ldi	r18, 0x33	; 51
 5d2:	f2 12       	cpse	r15, r18
 5d4:	0c c0       	rjmp	.+24     	; 0x5ee <main+0x148>
 5d6:	17 35       	cpi	r17, 0x57	; 87
 5d8:	51 f0       	breq	.+20     	; 0x5ee <main+0x148>
			 OCR2=0XFF;
 5da:	8f ef       	ldi	r24, 0xFF	; 255
 5dc:	83 bd       	out	0x23, r24	; 35
			 DIO_WriteChannel(DIO_ChannelC3,STD_Low);
 5de:	60 e0       	ldi	r22, 0x00	; 0
 5e0:	83 e1       	ldi	r24, 0x13	; 19
 5e2:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
			 DIO_WriteChannel(DIO_ChannelC4,STD_Low);
 5e6:	60 e0       	ldi	r22, 0x00	; 0
 5e8:	84 e1       	ldi	r24, 0x14	; 20
 5ea:	0e 94 62 00 	call	0xc4	; 0xc4 <DIO_WriteChannel>
		
		}
		if (data_Servo=='4'){
 5ee:	84 e3       	ldi	r24, 0x34	; 52
 5f0:	e8 12       	cpse	r14, r24
 5f2:	07 c0       	rjmp	.+14     	; 0x602 <main+0x15c>
			servo_angle(180);
 5f4:	64 eb       	ldi	r22, 0xB4	; 180
 5f6:	70 e0       	ldi	r23, 0x00	; 0
 5f8:	80 e0       	ldi	r24, 0x00	; 0
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0e 94 18 03 	call	0x630	; 0x630 <servo_angle>
 600:	71 cf       	rjmp	.-286    	; 0x4e4 <main+0x3e>
			
		}
		 
		else if((data_Servo=='5')&&(data_recv!='W')){
 602:	95 e3       	ldi	r25, 0x35	; 53
 604:	e9 12       	cpse	r14, r25
 606:	6e cf       	rjmp	.-292    	; 0x4e4 <main+0x3e>
 608:	17 35       	cpi	r17, 0x57	; 87
 60a:	09 f4       	brne	.+2      	; 0x60e <main+0x168>
 60c:	6b cf       	rjmp	.-298    	; 0x4e4 <main+0x3e>
			servo_angle(0);
 60e:	60 e0       	ldi	r22, 0x00	; 0
 610:	70 e0       	ldi	r23, 0x00	; 0
 612:	cb 01       	movw	r24, r22
 614:	0e 94 18 03 	call	0x630	; 0x630 <servo_angle>
			OCR1A=0;
 618:	1b bc       	out	0x2b, r1	; 43
 61a:	1a bc       	out	0x2a, r1	; 42
 61c:	63 cf       	rjmp	.-314    	; 0x4e4 <main+0x3e>

0000061e <Servo_Init>:
 */ 
#include "servo_motor.h"
#include <avr/io.h>

void Servo_Init(void){
	TCCR1A=(1<<COM1A1)|(1<<WGM11);
 61e:	82 e8       	ldi	r24, 0x82	; 130
 620:	8f bd       	out	0x2f, r24	; 47
	TCCR1B=(1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11);
 622:	8b e1       	ldi	r24, 0x1B	; 27
 624:	8e bd       	out	0x2e, r24	; 46
	ICR1=4999;
 626:	87 e8       	ldi	r24, 0x87	; 135
 628:	93 e1       	ldi	r25, 0x13	; 19
 62a:	97 bd       	out	0x27, r25	; 39
 62c:	86 bd       	out	0x26, r24	; 38
 62e:	08 95       	ret

00000630 <servo_angle>:
	
	
}
void servo_angle(long angle){
 630:	9b 01       	movw	r18, r22
 632:	ac 01       	movw	r20, r24
	OCR1A= (long)(((MAX_count - MIN_count)*(angle - MIN_angle))/(MAX_angle - MIN_angle))+MIN_count -1;
 634:	aa ef       	ldi	r26, 0xFA	; 250
 636:	b0 e0       	ldi	r27, 0x00	; 0
 638:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <__muluhisi3>
 63c:	24 eb       	ldi	r18, 0xB4	; 180
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	40 e0       	ldi	r20, 0x00	; 0
 642:	50 e0       	ldi	r21, 0x00	; 0
 644:	0e 94 4d 03 	call	0x69a	; 0x69a <__divmodsi4>
 648:	27 50       	subi	r18, 0x07	; 7
 64a:	3f 4f       	sbci	r19, 0xFF	; 255
 64c:	3b bd       	out	0x2b, r19	; 43
 64e:	2a bd       	out	0x2a, r18	; 42
 650:	08 95       	ret

00000652 <SPI_Init>:
 652:	fc 01       	movw	r30, r24
 654:	80 81       	ld	r24, Z
 656:	88 23       	and	r24, r24
 658:	19 f0       	breq	.+6      	; 0x660 <SPI_Init+0xe>
 65a:	81 30       	cpi	r24, 0x01	; 1
 65c:	81 f0       	breq	.+32     	; 0x67e <SPI_Init+0x2c>
 65e:	08 95       	ret
 660:	80 e1       	ldi	r24, 0x10	; 16
 662:	8d b9       	out	0x0d, r24	; 13
 664:	8d b1       	in	r24, 0x0d	; 13
 666:	80 64       	ori	r24, 0x40	; 64
 668:	8d b9       	out	0x0d, r24	; 13
 66a:	87 b3       	in	r24, 0x17	; 23
 66c:	80 6b       	ori	r24, 0xB0	; 176
 66e:	87 bb       	out	0x17, r24	; 23
 670:	87 b3       	in	r24, 0x17	; 23
 672:	8f 7b       	andi	r24, 0xBF	; 191
 674:	87 bb       	out	0x17, r24	; 23
 676:	88 b3       	in	r24, 0x18	; 24
 678:	80 61       	ori	r24, 0x10	; 16
 67a:	88 bb       	out	0x18, r24	; 24
 67c:	08 95       	ret
 67e:	87 b3       	in	r24, 0x17	; 23
 680:	80 64       	ori	r24, 0x40	; 64
 682:	87 bb       	out	0x17, r24	; 23
 684:	87 b3       	in	r24, 0x17	; 23
 686:	8f 74       	andi	r24, 0x4F	; 79
 688:	87 bb       	out	0x17, r24	; 23
 68a:	80 e4       	ldi	r24, 0x40	; 64
 68c:	8d b9       	out	0x0d, r24	; 13
 68e:	08 95       	ret

00000690 <SPI_TXRX>:
 690:	8f b9       	out	0x0f, r24	; 15
 692:	77 9b       	sbis	0x0e, 7	; 14
 694:	fe cf       	rjmp	.-4      	; 0x692 <SPI_TXRX+0x2>
 696:	8f b1       	in	r24, 0x0f	; 15
 698:	08 95       	ret

0000069a <__divmodsi4>:
 69a:	05 2e       	mov	r0, r21
 69c:	97 fb       	bst	r25, 7
 69e:	1e f4       	brtc	.+6      	; 0x6a6 <__divmodsi4+0xc>
 6a0:	00 94       	com	r0
 6a2:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__negsi2>
 6a6:	57 fd       	sbrc	r21, 7
 6a8:	07 d0       	rcall	.+14     	; 0x6b8 <__divmodsi4_neg2>
 6aa:	0e 94 77 03 	call	0x6ee	; 0x6ee <__udivmodsi4>
 6ae:	07 fc       	sbrc	r0, 7
 6b0:	03 d0       	rcall	.+6      	; 0x6b8 <__divmodsi4_neg2>
 6b2:	4e f4       	brtc	.+18     	; 0x6c6 <__divmodsi4_exit>
 6b4:	0c 94 64 03 	jmp	0x6c8	; 0x6c8 <__negsi2>

000006b8 <__divmodsi4_neg2>:
 6b8:	50 95       	com	r21
 6ba:	40 95       	com	r20
 6bc:	30 95       	com	r19
 6be:	21 95       	neg	r18
 6c0:	3f 4f       	sbci	r19, 0xFF	; 255
 6c2:	4f 4f       	sbci	r20, 0xFF	; 255
 6c4:	5f 4f       	sbci	r21, 0xFF	; 255

000006c6 <__divmodsi4_exit>:
 6c6:	08 95       	ret

000006c8 <__negsi2>:
 6c8:	90 95       	com	r25
 6ca:	80 95       	com	r24
 6cc:	70 95       	com	r23
 6ce:	61 95       	neg	r22
 6d0:	7f 4f       	sbci	r23, 0xFF	; 255
 6d2:	8f 4f       	sbci	r24, 0xFF	; 255
 6d4:	9f 4f       	sbci	r25, 0xFF	; 255
 6d6:	08 95       	ret

000006d8 <__muluhisi3>:
 6d8:	0e 94 99 03 	call	0x732	; 0x732 <__umulhisi3>
 6dc:	a5 9f       	mul	r26, r21
 6de:	90 0d       	add	r25, r0
 6e0:	b4 9f       	mul	r27, r20
 6e2:	90 0d       	add	r25, r0
 6e4:	a4 9f       	mul	r26, r20
 6e6:	80 0d       	add	r24, r0
 6e8:	91 1d       	adc	r25, r1
 6ea:	11 24       	eor	r1, r1
 6ec:	08 95       	ret

000006ee <__udivmodsi4>:
 6ee:	a1 e2       	ldi	r26, 0x21	; 33
 6f0:	1a 2e       	mov	r1, r26
 6f2:	aa 1b       	sub	r26, r26
 6f4:	bb 1b       	sub	r27, r27
 6f6:	fd 01       	movw	r30, r26
 6f8:	0d c0       	rjmp	.+26     	; 0x714 <__udivmodsi4_ep>

000006fa <__udivmodsi4_loop>:
 6fa:	aa 1f       	adc	r26, r26
 6fc:	bb 1f       	adc	r27, r27
 6fe:	ee 1f       	adc	r30, r30
 700:	ff 1f       	adc	r31, r31
 702:	a2 17       	cp	r26, r18
 704:	b3 07       	cpc	r27, r19
 706:	e4 07       	cpc	r30, r20
 708:	f5 07       	cpc	r31, r21
 70a:	20 f0       	brcs	.+8      	; 0x714 <__udivmodsi4_ep>
 70c:	a2 1b       	sub	r26, r18
 70e:	b3 0b       	sbc	r27, r19
 710:	e4 0b       	sbc	r30, r20
 712:	f5 0b       	sbc	r31, r21

00000714 <__udivmodsi4_ep>:
 714:	66 1f       	adc	r22, r22
 716:	77 1f       	adc	r23, r23
 718:	88 1f       	adc	r24, r24
 71a:	99 1f       	adc	r25, r25
 71c:	1a 94       	dec	r1
 71e:	69 f7       	brne	.-38     	; 0x6fa <__udivmodsi4_loop>
 720:	60 95       	com	r22
 722:	70 95       	com	r23
 724:	80 95       	com	r24
 726:	90 95       	com	r25
 728:	9b 01       	movw	r18, r22
 72a:	ac 01       	movw	r20, r24
 72c:	bd 01       	movw	r22, r26
 72e:	cf 01       	movw	r24, r30
 730:	08 95       	ret

00000732 <__umulhisi3>:
 732:	a2 9f       	mul	r26, r18
 734:	b0 01       	movw	r22, r0
 736:	b3 9f       	mul	r27, r19
 738:	c0 01       	movw	r24, r0
 73a:	a3 9f       	mul	r26, r19
 73c:	70 0d       	add	r23, r0
 73e:	81 1d       	adc	r24, r1
 740:	11 24       	eor	r1, r1
 742:	91 1d       	adc	r25, r1
 744:	b2 9f       	mul	r27, r18
 746:	70 0d       	add	r23, r0
 748:	81 1d       	adc	r24, r1
 74a:	11 24       	eor	r1, r1
 74c:	91 1d       	adc	r25, r1
 74e:	08 95       	ret

00000750 <__itoa_ncheck>:
 750:	bb 27       	eor	r27, r27
 752:	4a 30       	cpi	r20, 0x0A	; 10
 754:	31 f4       	brne	.+12     	; 0x762 <__itoa_ncheck+0x12>
 756:	99 23       	and	r25, r25
 758:	22 f4       	brpl	.+8      	; 0x762 <__itoa_ncheck+0x12>
 75a:	bd e2       	ldi	r27, 0x2D	; 45
 75c:	90 95       	com	r25
 75e:	81 95       	neg	r24
 760:	9f 4f       	sbci	r25, 0xFF	; 255
 762:	0c 94 b4 03 	jmp	0x768	; 0x768 <__utoa_common>

00000766 <__utoa_ncheck>:
 766:	bb 27       	eor	r27, r27

00000768 <__utoa_common>:
 768:	fb 01       	movw	r30, r22
 76a:	55 27       	eor	r21, r21
 76c:	aa 27       	eor	r26, r26
 76e:	88 0f       	add	r24, r24
 770:	99 1f       	adc	r25, r25
 772:	aa 1f       	adc	r26, r26
 774:	a4 17       	cp	r26, r20
 776:	10 f0       	brcs	.+4      	; 0x77c <__utoa_common+0x14>
 778:	a4 1b       	sub	r26, r20
 77a:	83 95       	inc	r24
 77c:	50 51       	subi	r21, 0x10	; 16
 77e:	b9 f7       	brne	.-18     	; 0x76e <__utoa_common+0x6>
 780:	a0 5d       	subi	r26, 0xD0	; 208
 782:	aa 33       	cpi	r26, 0x3A	; 58
 784:	08 f0       	brcs	.+2      	; 0x788 <__utoa_common+0x20>
 786:	a9 5d       	subi	r26, 0xD9	; 217
 788:	a1 93       	st	Z+, r26
 78a:	00 97       	sbiw	r24, 0x00	; 0
 78c:	79 f7       	brne	.-34     	; 0x76c <__utoa_common+0x4>
 78e:	b1 11       	cpse	r27, r1
 790:	b1 93       	st	Z+, r27
 792:	11 92       	st	Z+, r1
 794:	cb 01       	movw	r24, r22
 796:	0c 94 cd 03 	jmp	0x79a	; 0x79a <strrev>

0000079a <strrev>:
 79a:	dc 01       	movw	r26, r24
 79c:	fc 01       	movw	r30, r24
 79e:	67 2f       	mov	r22, r23
 7a0:	71 91       	ld	r23, Z+
 7a2:	77 23       	and	r23, r23
 7a4:	e1 f7       	brne	.-8      	; 0x79e <strrev+0x4>
 7a6:	32 97       	sbiw	r30, 0x02	; 2
 7a8:	04 c0       	rjmp	.+8      	; 0x7b2 <strrev+0x18>
 7aa:	7c 91       	ld	r23, X
 7ac:	6d 93       	st	X+, r22
 7ae:	70 83       	st	Z, r23
 7b0:	62 91       	ld	r22, -Z
 7b2:	ae 17       	cp	r26, r30
 7b4:	bf 07       	cpc	r27, r31
 7b6:	c8 f3       	brcs	.-14     	; 0x7aa <strrev+0x10>
 7b8:	08 95       	ret

000007ba <_exit>:
 7ba:	f8 94       	cli

000007bc <__stop_program>:
 7bc:	ff cf       	rjmp	.-2      	; 0x7bc <__stop_program>
